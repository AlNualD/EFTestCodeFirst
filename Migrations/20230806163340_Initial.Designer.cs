// <auto-generated />
using EFTestCodeFirst.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFTestCodeFirst.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230806163340_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFTestCodeFirst.DAL.Entities.CharacterDb", b =>
                {
                    b.Property<string>("CharacterId")
                        .HasColumnType("text");

                    b.Property<int>("CurrentHitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHitPoints")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserDbUserId")
                        .HasColumnType("text");

                    b.HasKey("CharacterId");

                    b.HasIndex("UserDbUserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("EFTestCodeFirst.DAL.Entities.UserDb", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFTestCodeFirst.DAL.Entities.CharacterDb", b =>
                {
                    b.HasOne("EFTestCodeFirst.DAL.Entities.UserDb", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserDbUserId");
                });

            modelBuilder.Entity("EFTestCodeFirst.DAL.Entities.UserDb", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
